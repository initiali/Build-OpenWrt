name: Build OpenWrt
on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'lede.config'
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  SSH_ACTIONS: true
  
jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: Load custom configuration
      run: |
        [ -e lede.config ] && mv lede.config openwrt/.config
        
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j3 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        cd /workdir/openwrt/bin/targets/*/*
        echo "::set-env name=FIRMWARE::$PWD"
        
    - name: Upload SquashFS Factory Image
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' 
      with:
        name: openwrt${{ env.DEVICE_NAME }}-squashfs-factory.img.gz
        path: ${{ env.FIRMWARE }}/openwrt*squashfs-factory.img.gz

    - name: Upload SquashFS Sysupgrade Image
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' 
      with:
        name: openwrt${{ env.DEVICE_NAME }}-squashfs-sysupgrade.img.gz
        path: ${{ env.FIRMWARE }}/openwrt*squashfs-sysupgrade.img.gz

    - name: Upload Ext4 Factory Image
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' 
      with:
        name: openwrt${{ env.DEVICE_NAME }}-ext4-factory.img.gz
        path: ${{ env.FIRMWARE }}/openwrt*ext4-factory.img.gz
        
    - name: Upload Ext4 Sysupgrade Image
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' 
      with:
        name: openwrt${{ env.DEVICE_NAME }}-ext4-sysupgrade.img.gz
        path: ${{ env.FIRMWARE }}/openwrt*ext4-sysupgrade.img.gz
